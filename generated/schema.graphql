### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Comment {
  author: User!
  content: String!
  createdAt: DateTime!
  highlight: Highlight!
  id: String!
}

type Conference {
  abbreviation: String!
  activeSeasons: [ConferenceActiveSeasons!]!
  conferenceIdApi: Int!
  divisions: [DivisionConference!]!
  id: String!
  link: String!
  name: String!
  shortName: String!
  teams: [TeamConference!]!
}

type ConferenceActiveSeasons {
  conference: Conference!
  id: String!
  season: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

enum Decision {
  L
  W
}

type Division {
  abbreviation: String!
  activeSeasons: [DivisionActiveSeasons!]!
  conferences: [DivisionConference!]!
  divisionIdApi: Int!
  id: String!
  link: String!
  name: String!
  shortName: String!
  teams: [TeamDivision!]!
}

type DivisionActiveSeasons {
  division: Division!
  id: String!
  season: String!
}

type DivisionConference {
  conference: Conference!
  division: Division!
  id: String!
  season: String!
}

type Game {
  apiDate: DateTime!
  awayScore: Int!
  awayTeam: Team!
  boxscoresFetched: Boolean!
  contentLink: String!
  gameDate: DateTime!
  gamePk: Int!
  gameType: GameType!
  goalieBoxscores: [GoalieBoxscore]!
  highlightMetaFetched: Boolean!
  highlights: [Highlight]!
  highlightsFetched: Boolean!
  homeScore: Int!
  homeTeam: Team!
  id: String!
  linescores: [Linescore]!
  linescoresFetched: Boolean!
  liveLink: String!
  playbacksFetched: Boolean!
  skaterBoxscores: [SkaterBoxscore]!
  statusCode: Int!
}

enum GameType {
  P
  R
}

type GoalieBoxscore {
  assists: Int!
  decision: Decision
  evenSavePct: Float
  evenSaves: Int!
  game: Game!
  gamePk: Int!
  goals: Int!
  id: String!
  penaltyMinutes: Int!
  player: Player!
  powerPlaySavePct: Float
  powerPlaySaves: Int!
  powerPlayShotsAgainst: Int!
  savePct: Float!
  saves: Int!
  shortHandedSavePct: Float
  shortHandedSaves: Int!
  shortHandedShotsAgainst: Int!
  shotsAgainst: Int!
  team: Team!
  timeOnIce: Int!
}

type Highlight {
  blurb: String!
  comments: [Comment]!
  description: String!
  duration: Int!
  eventIdApi: Int
  game: Game!
  gamePk: Int!
  highlightMeta: HighlightMeta
  id: String!
  likedBy: [User]!
  mediaPlaybackIdApi: Int!
  opponent: Team
  playbacks: [Playback]!
  team: Team
  title: String!
  type: HighlightType!
  videoIdApi: Int!
}

type HighlightMeta {
  assist1: Player
  assist2: Player
  coordX: Int!
  coordY: Int!
  dateTime: DateTime!
  emptyNet: Boolean!
  eventIdApi: Int!
  eventIdxApi: Int!
  gamePk: Int!
  gameWinningGoal: Boolean!
  goalie: Player
  hasVideo: Boolean!
  highlight: Highlight
  id: String!
  periodNumber: Int!
  periodTime: Int!
  periodType: PeriodType!
  scorer: Player!
  shotType: String!
  team: Team!
  type: VideoDataType!
}

enum HighlightType {
  CONDENSED
  MILESTONE
  RECAP
}

type Linescore {
  blocked: Int!
  faceOffWins: Int!
  faceOffsTaken: Int!
  game: Game!
  gamePk: Int!
  giveaways: Int!
  goalsAgainst: Int!
  goalsFor: Int!
  hitsAgainst: Int!
  hitsFor: Int!
  id: String!
  isHomeGame: Boolean!
  loss: Boolean!
  opponent: Team!
  ot: Boolean!
  otWin: Boolean!
  penaltyMinutes: Int!
  points: Int!
  powerPlayGoals: Int!
  powerPlayGoalsAllowed: Int!
  powerPlayOpportunities: Int!
  powerPlayOpportunitiesAllowed: Int!
  shootOutWin: Boolean!
  shotsAgainst: Int!
  shotsFor: Int!
  takeaways: Int!
  team: Team!
  win: Boolean!
}

enum PeriodType {
  OVERTIME
  REGULAR
  SHOOTOUT
}

type Playback {
  highlight: Highlight!
  id: String!
  type: PlaybackType!
  url: String!
}

type PlaybackType {
  height: Int
  id: String!
  name: String!
  playbacks: [Playback]!
  width: Int
}

type Player {
  active: Boolean!
  alternateCaptain: Boolean!
  birthCity: String!
  birthCountry: String!
  birthDate: DateTime!
  birthStateProvince: String
  captain: Boolean!
  favoritedBy: [User]!
  firstName: String!
  goalieBoxscores: [GoalieBoxscore]!
  height: Int!
  highlightMetaAssist1: [HighlightMeta]!
  highlightMetaAssist2: [HighlightMeta]!
  highlightMetaGoal: [HighlightMeta]!
  highlightMetaGoalie: [HighlightMeta]!
  id: String!
  lastName: String!
  link: String!
  nationality: String!
  playerIdApi: Int!
  primaryNumber: Int!
  primaryPosition: Position!
  rookie: Boolean!
  rosterStatus: RosterStatus!
  shootsCatches: ShootsCatches!
  siteLink: String!
  skaterBoxscores: [SkaterBoxscore]!
  teams: [PlayerTeam!]!
  weight: Int!
}

type PlayerTeam {
  endDate: DateTime
  id: String!
  player: Player!
  startDate: DateTime!
  team: Team!
}

enum Position {
  C
  D
  G
  L
  NA
  R
}

type Query {
  allDivisions: [Division]!
  allUsers: [User]!
  bestPlayers(
    """Number of games considered"""
    numOfGames: Int! = 1

    """Primary sort column"""
    sortBy: String! = "points"
  ): [SkaterBoxscore]!
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

enum RosterStatus {
  I
  N
  Y
}

enum ShootsCatches {
  L
  R
}

type SkaterBoxscore {
  assists: Int!
  blocked: Int!
  evenTimeOnIce: Int!
  faceOffWins: Int!
  faceOffsTaken: Int!
  game: Game!
  gamePk: Int!
  giveaways: Int!
  goals: Int!
  hits: Int!
  id: String!
  penaltyMinutes: Int!
  player: Player!
  plusMinus: Int!
  points: Int!
  powerPlayAssists: Int!
  powerPlayGoals: Int!
  powerPlayTimeOnIce: Int!
  shortHandedAssists: Int!
  shortHandedGoals: Int!
  shortHandedTimeOnIce: Int!
  shots: Int!
  takeaways: Int!
  team: Team!
  timeOnIce: Int!
}

type Team {
  abbreviation: String!
  activeSeasons: [TeamActiveSeasons]!
  awayGames: [Game!]!
  conferences: [TeamConference!]!
  divisions: [TeamDivision!]!
  firstYearOfPlay: Int!
  goalieBoxscores: [GoalieBoxscore]!
  highlightMeta: [HighlightMeta]!
  highlights: [Highlight]!
  highlightsAgainst: [Highlight]!
  homeGames: [Game!]!
  id: String!
  linescores: [Linescore]!
  link: String!
  locationName: String!
  name: String!
  officialSiteUrl: String!
  opponentLinescores: [Linescore]!
  players: [PlayerTeam!]!
  shortName: String!
  siteLink: String!
  skaterBoxscores: [SkaterBoxscore]!
  teamIdApi: Int!
  teamName: String!
  twitterHashtag: String!
}

type TeamActiveSeasons {
  id: String!
  season: String!
  team: Team!
}

type TeamConference {
  conference: Conference!
  id: String!
  season: String!
  team: Team!
}

type TeamDivision {
  division: Division!
  id: String!
  season: String!
  team: Team!
}

type User {
  comments: [Comment]!
  createdAt: DateTime!
  email: String!
  favoritePlayers: [Player]!
  id: String!
  isVerified: Boolean!
  likedHighlights: [Highlight]!
  role: Role!
  updatedAt: DateTime!
  username: String!
  usernameLower: String!
}

enum VideoDataType {
  GOAL
  SHOT
}
